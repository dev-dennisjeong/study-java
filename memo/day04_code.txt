package methodTest;

public class MethodTask {
//   1~10까지 println()으로 출력하는 메소드
   void printFrom1To10() {
      for (int i = 0; i < 10; i++) {
         System.out.println(i + 1);
      }
   }

//   "홍길동"을 n번 println()으로 출력하는 메소드
   void printHong(int count) {
      for (int i = 0; i < count; i++) {
         System.out.println("홍길동");
      }
   }

//   이름을 n번 println()으로 출력하는 메소드
   void printName(String name, int count) {
      for (int i = 0; i < count; i++) {
         System.out.println(name);
      }
   }

//   세 정수의 뺄셈을 해주는 메소드
   int sub(int number1, int number2, int number3) {
      int result = number1 - number2 - number3;
      return result;
   }

//   두 정수의 나눗셈 후 몫과 나머지 두 개를 구하는 메소드
   int[] div(int number1, int number2) {
      int[] result = null;

      if (number2 != 0) {
         result = new int[2];
         result[0] = number1 / number2;
         result[1] = number1 % number2;
      }
      return result;
   }

//   1~n까지의 합을 구해주는 메소드
   int getTotalFrom1(int end) {
      int total = 0;
      for (int i = 0; i < end; i++) {
         total += i + 1;
      }
      return total;
   }

//   홀수를 짝수로, 짝수를 홀수로 바꿔주는 메소드
   int change(int number) {
      return ++number;
   }

//   문자열을 입력받고 소문자는 대문자로, 대문자는 소문자로 바꿔주는 메소드
   String changeToUpperOrLower(String str) {
      String result = "";
      for (int i = 0; i < str.length(); i++) {
         char c = str.charAt(i);
         if (c >= 65 && c <= 90) {
            result += (char) (c + 32);

         } else if (c >= 97 && c <= 122) {
            result += (char) (c - 32);

         } else {

            result += c;
         }
      }
      return result;
   }

//   문자열을 입력받고 원하는 문자의 개수를 구해주는 메소드
   int getCount(String str, char c) {
      int count = 0;
      for (int i = 0; i < str.length(); i++) {
         if (str.charAt(i) == c) {
            count++;
         }
      }
      return count;
   }

//   5개의 정수를 입력받은 후 원하는 인덱스의 값을 구해주는 메소드
   int getValue(int[] arData, int index) {
      return arData[index];
   }

//   한글을 정수로 바꿔주는 메소드(일공이사 -> 1024)
   int changeToInteger(String hangle) {
      String hangleOriginal = "공일이삼사오육칠팔구";
      String result = "";
      for (int i = 0; i < hangle.length(); i++) {
         result += hangleOriginal.indexOf(hangle.charAt(i));
      }
      return Integer.parseInt(result);
    }

//   5개의 정수를 입력받고 최대값과 최소값을 구해주는 메소드
   int[] getMaxAndMin(int[] arData) {
      int[] result = {arData[0], arData[0]};
      
      for (int i = 0; i < arData.length; i++) {
         if(result[0] < arData[i]) {result[0] = arData[i];} 
         if(result[1] > arData[i]) {result[1] = arData[i];} 
      }
      return result;
   }
   
//   5개의 정수를 입력받고 최대값과 최소값을 구해주는 메소드(void)
   void getMaxAndMin(int[] arData, int[] result) {
      result[0] = arData[0];
      result[1] = arData[0];
      
      for (int i = 0; i < arData.length; i++) {
         if(result[0] < arData[i]) {result[0] = arData[i];} 
         if(result[1] > arData[i]) {result[1] = arData[i];} 
      }
   }
   
   public static void main(String[] args) {
      MethodTask methodTask = new MethodTask();
//      methodTask.printFrom1To10();
//      methodTask.printHong(10);
//      methodTask.printName("한동석", 5);
//      System.out.println(methodTask.sub(5, 5 , 10));
//      int[] result = methodTask.div(10, 0);
//      if (result == null) {
//         System.out.println("0으로 나눌 수 없습니다.");
//      } else {
//         System.out.println("몫: " + result[0]);
//         System.out.println("나머지: " + result[1]);
//      }
      int[] result = new int[2];
      int[] arData = {3, 5, 6, 2, 1};
      methodTask.getMaxAndMin(arData, result);
      System.out.println("최대값: " + result[0]);
      System.out.println("최소값: " + result[1]);
   }
}


 public static void main(String[] args) {
//      각 버튼을 눌렀을 때, 이동하는 페이지는 다음과 같다.
      
//      btn1 : 회원가입 페이지
//      btn2 : 로그인 페이지
//      btn3 : 마이 페이지
      
//      회원가입 -> 로그인 -> 마이 페이지
//      위 순서대로 입력해야 하며, 만약 이전 단계를 진행하기 전에 다음 단계 버튼을 누를 경우, 이전 단계에 대한 메세지를 출력해준다.
//      예) 로그인 클릭 시, "회원가입을 먼저 진행해주세요" 출력
      
//      알맞은 단계의 버튼을 누르면, 해당 단계에 대한 메세지를 출력해준다.
//      예)   회원가입 클릭 시, 회원가입 성공
//         마이 페이지 클릭 시, 본인 이름과 나이 출력
      
//      버튼 배열
      String[] arButton = {"btn1", "btn2", "btn3", "btn4"};
//      성공 메세지 배열
      String[] arMessage = {"회원가입 성공", "로그인 성공", "한동석(20)", "로그아웃 성공"};
//      오류 메세지 배열
      String[] arError = {"회원가입을 먼저 진행해주세요.", "로그인을 먼저 진행해주세요"};
//      오류 메세지
      String errorMessage = "다시 시도해주세요";
      
      Scanner sc = new Scanner(System.in);
//      choice : 사용자가 입력한 번호, temp : 사용자가 이전에 입력한 번호
      int choice = 0, temp = 0;
      boolean condition = false;
      
      while(true) {
//         메뉴 출력
         for (int i = 0; i < arButton.length; i++) {
            System.out.println(i + 1 + "." + arButton[i]);
         }
         
//         만약 temp에 0이 담겨있다면, 0을 유지해야 한다.
         temp = temp == 0 ? 0 : choice;
//         사용자가 선택한 버튼 번호
         choice = sc.nextInt();
//         버튼 번호 이외의 번호를 입력했을 경우 오류 메세지 출력
         if(choice < 1 || choice > 4) {System.out.println(errorMessage); continue;}
//         로그아웃 시 프로그램 종료
         if(choice == 4) {System.out.println(arMessage[choice - 1]); break;}
         
//         사용자가 선택한 버튼의 번호 - 1과 이전에 사용자가 입력한 번호가 같은 지 비교
//         전 단계를 진행 했는 지 검사
         condition = choice - 1 == temp;
         
         if(!condition) { // 전 단계를 안했을 경우
            temp = 0; // 회원가입부터 진행하라는 뜻.
            System.out.println(arError[choice - 2]);
            continue;
         }
         // 전 단계를 진행했을 경우
         System.out.println(arMessage[choice - 1]);
         if(choice == 3) { // 마이 페이지를 선택했을 때에는
            temp = 0; // 회원가입부터 진행하라는 뜻.
            continue;
         }
//         마이 페이지 이외의 서비스를 이용했을 경우 입력했던 번호를 temp에 저장한다.
         temp = choice;
         
      }
   }
}




















